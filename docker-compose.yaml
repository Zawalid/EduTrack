services:
  spring-app:
    extends:
      file: ./backend-spring-boot/docker-compose.yaml
      service: app
    depends_on:
      mysqldb:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - edu-track-network

  nodejs-app:
    extends:
      file: ./backend-node-js/docker-compose.yaml
      service: app
    depends_on:
      mongo:
        condition: service_started
      kafka:
        condition: service_started
    networks:
      - edu-track-network

  mysqldb:
    extends:
      file: ./backend-spring-boot/docker-compose.yaml
      service: mysqldb
    networks:
      - edu-track-network

  mongo:
    extends:
      file: ./backend-node-js/docker-compose.yaml
      service: mongo
    networks:
      - edu-track-network

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: kafka-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - edu-track-network

  kafka:
    image: bitnami/kafka:latest
    container_name: edu-track-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092" ]
      interval: 10s
      retries: 10
      start_period: 20s
    networks:
      - edu-track-network

  kong-database:
    extends:
      file: ./middleware/docker-compose.yaml
      service: kong-database
    networks:
      - edu-track-network

  kong-migrations:
    extends:
      file: ./middleware/docker-compose.yaml
      service: kong-migrations
    depends_on:
      kong-database:
        condition: service_started
    networks:
      - edu-track-network

  kong-gateway:
    extends:
      file: ./middleware/docker-compose.yaml
      service: kong-gateway
    depends_on:
      kong-database:
        condition: service_completed_successfully
      kafka:
        condition: service_healthy
    networks:
      - edu-track-network

volumes:
  mysql-data:
  mongo-data:
  kong-db-data:


networks:
  edu-track-network:
    driver: bridge
