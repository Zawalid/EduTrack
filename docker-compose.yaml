version: '3.8'

services:
  spring-app:
    extends:
      file: ./backend-spring-boot/docker-compose.yaml
      service: app
    depends_on:
      mysqldb:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - edu-track-network

  nodejs-app:
    extends:
      file: ./backend-node-js/docker-compose.yaml
      service: app
    depends_on:
      mongo:
        condition: service_started
      kafka:
        condition: service_started
    networks:
      - edu-track-network

  mysqldb:
    extends:
      file: ./backend-spring-boot/docker-compose.yaml
      service: mysqldb
    networks:
      - edu-track-network

  mongo:
    extends:
      file: ./backend-node-js/docker-compose.yaml
      service: mongo
    networks:
      - edu-track-network

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: kafka-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - edu-track-network

  kafka:
    image: bitnami/kafka:latest
    container_name: edu-track-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      retries: 10
      start_period: 20s
    networks:
      - edu-track-network

  # kong-database:
  #   image: postgres:13
  #   container_name: kong-database
  #   environment:
  #     POSTGRES_USER: kong
  #     POSTGRES_DB: kong
  #     POSTGRES_PASSWORD: kongpass
  #   networks:
  #     - edu-track-network
  #   volumes:
  #     - kong-db-data:/var/lib/postgresql/data

  # kong-gateway:
  #   image: kong/kong-gateway:3.9.0.1
  #   container_name: kong-gateway
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: kong-database
  #     KONG_PG_USER: kong
  #     KONG_PG_PASSWORD: kongpass
  #     KONG_PROXY_ACCESS_LOG: /dev/stdout
  #     KONG_ADMIN_ACCESS_LOG: /dev/stdout
  #     KONG_PROXY_ERROR_LOG: /dev/stderr
  #     KONG_ADMIN_ERROR_LOG: /dev/stderr
  #     KONG_ADMIN_LISTEN: 0.0.0.0:8001
  #     KONG_ADMIN_GUI_URL: http://localhost:8002
  #     KONG_LICENSE_DATA: # Replace with your Kong License Data if needed
  #   ports:
  #     - "8000:8000"
  #     - "8443:8443"
  #     - "8001:8001"
  #     - "8444:8444"
  #     - "8002:8002"
  #     - "8445:8445"
  #   depends_on:
  #     - kong-database
  #     - kafka
  #   networks:
  #     - edu-track-network

volumes:
  mysql-data:
  mongo-data:
  kong-db-data:

networks:
  edu-track-network:
    driver: bridge
